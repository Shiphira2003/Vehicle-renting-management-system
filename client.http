

###
GET http://localhost:8000/
Content-Type: application/json

###
GET  http://localhost:8000/api/users
Content-Type: application/json

###
POST http://localhost:8000/api/auth/register
Content-Type: application/json

{
  "firstName": "caleb",
  "lastName": "wamaitha",
  "contactPhone": "0778656469",
  "email": "ndirangushiphira01@gmail.com",
  "password": "12345678",
  "address": "123 mailRoad"
  
}

###
POST http://localhost:8000/api/auth/login
Content-Type: application/json

{
  "email": "ndirangushiphira01@gmail.com",
  "password": "12345678"
}

###
GET http://localhost:8000/api/vehicle-specifications

###
GET http://localhost:8000/api/vehicle-specifications?manufacturer=m


###
POST http://localhost:8000/api/vehicle-specifications
Content-Type: application/json

{
  "manufacturer": "Mazda",
  "model": "Camry",
  "year": 2024,
  "fuelType": "Petrol",
  "engineCapacity": "2.5L",
  "transmission": "Automatic",
  "seatingCapacity": 7,
  "color": "chacoal black",
  "features": "Bluetooth, Backup Camera, Lane Assist"
}


###
POST http://localhost:8000/api/vehicles
Content-Type: application/json

{
 
  "vehicleSpecId": 3,
  "rentalRate": 90.25,
  "availability": false
}

### Get Vehicles by Manufacturer Name
GET http://localhost:8000/api/vehicles/name/Toyota
Accept: application/json

### Get Vehicles by another Manufacturer 
GET http://localhost:8000/api/vehicles/name/Mazda
Accept: application/json
###
POST http://localhost:8000/api/locations
Content-Type: application/json

{
  
  "name": "Suburb Depot",
  "address": "456 Oak Avenue, Townsville"
}
###
POST http://localhost:8000/api/bookings
Content-Type: application/json

{
  
  "userId": 1,
  "vehicleId": 2,
  "locationId": 3,
  "bookingDate": "2024-07-20T14:30:00Z",
  "returnDate": "2024-07-22T14:30:00Z",
  "totalAmount": 180.50,
  "bookingStatus": "Pending"
}

###
GET  http://localhost:8000/api/bookings
Content-Type: application/json
###
POST http://localhost:8000/api/payments
Content-Type: application/json

{
  
  "bookingId": 3,
  "amount": 375.50,
  "paymentStatus": "Pending",
  "paymentMethod": "Bank Transfer",
  "transactionId": "TXN987654321"
}
### Create a new Ticket
POST http://localhost:8000/api/tickets
Content-Type: application/json

{
  "userId": 2,
  "subject": "Payment Gateway Error",
  "description": "My payment failed when trying to confirm booking ID 123."
}
### Get all Tickets
GET http://localhost:8000/api/tickets
Accept: application/json

### Get Ticket by ID
GET http://localhost:8000/api/tickets/1
Accept: application/json

### Update an existing Ticket
PUT http://localhost:8000/api/tickets/1
Content-Type: application/json

{
  "status": "Resolved",
  "description": "Issue resolved. Customer contacted and rebooked vehicle. Original description: I am unable to book a vehicle for July 25-27. The system shows no availability."
}

### Delete a Ticket
DELETE http://localhost:8000/api/tickets/2
Accept: application/json


### Create a new Booking
# IMPORTANT: Replace {existing_user_id}, {existing_vehicle_id}, and {existing_location_id}
# with actual integer IDs from your users, vehicles, and locations tables.
POST http://localhost:8000/api/bookings
Content-Type: application/json

{
  "userId": 1,       
  "vehicleId": 1,     
  "locationId": 1,   
  "bookingDate": "2024-07-10",
  "returnDate": "2024-07-15",
  "totalAmount": 375.50,
  "bookingStatus": "Confirmed"
}


### Create another Booking (with default status)
POST http://localhost:8000/api/bookings
Content-Type: application/json

{
  "userId": 2,        
  "vehicleId": 3,     
  "locationId": 2,    
  "bookingDate": "2024-08-01",
  "returnDate": "2024-08-05",
  "totalAmount": 480.00
}


### Update an existing Booking
# Replace {id} with an actual bookingId.
PUT http://localhost:8000/api/bookings/1
Content-Type: application/json

{
  "returnDate": "2024-07-16",
  "bookingStatus": "Completed"
}


### Create a new Location (Example 1: Main Branch)
POST http://localhost:8000/api/locations
Content-Type: application/json

{
  "name": "Main Branch Office",
  "address": "123 Main Street, Cityville",
  "contact": "555-111-2222"
}

###

POST http://localhost:8000/api/tickets
{
  "userId": 123,
  "subject": "Login Issue: Cannot access dashboard",
  "description": "I am unable to log in to my account. I've tried resetting my password multiple times, but it keeps saying 'invalid credentials'.",
  "status": "Open" 
}

